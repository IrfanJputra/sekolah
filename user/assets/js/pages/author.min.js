var yall = function() {
    "use strict";
    return function(c) {
        var h = (c = c || {}).lazyClass || "lazy",
            j = c.lazyBackgroundClass || "lazy-bg",
            k = "idleLoadTimeout" in c ? c.idleLoadTimeout : 200,
            m = c.observeChanges || !1,
            i = c.events || {},
            n = c.noPolyfill || !1,
            a = window,
            o = "IntersectionObserver" in a && "IntersectionObserverEntry" in a,
            l = /baidu|(?:google|bing|yandex|duckduck)bot/i.test(navigator.userAgent),
            d = ["srcset", "src", "poster"],
            p = [],
            f = function(a, b) {
                return p.slice.call((b || document).querySelectorAll(a || "img." + h + ",video." + h + ",iframe." + h + ",." + j))
            },
            q = function(a) {
                var b = a.parentNode;
                "PICTURE" == b.nodeName && t(f("source", b), s), "VIDEO" == a.nodeName && t(f("source", a), s), s(a);
                var d = a.classList;
                d.contains(j) && (d.remove(j), d.add(c.lazyBackgroundLoaded || "lazy-bg-loaded"))
            },
            r = function(a) {
                for (var b in i) a.addEventListener(b, i[b].listener || i[b], i[b].options || void 0)
            },
            s = function(a) {
                for (var b in d)
                    if (d[b] in a.dataset) {
                        a.setAttribute(d[b], a.dataset[d[b]]);
                        var c = a.parentNode;
                        "SOURCE" === a.nodeName && c.autoplay && (c.load(), /Trident/.test(navigator.userAgent) && c.play(), c.classList.remove(h)), a.classList.remove(h)
                    }
            },
            t = function(b, c) {
                for (var d = 0; d < b.length; d++) a.IntersectionObserver && c instanceof a.IntersectionObserver ? c.observe(b[d]) : c(b[d])
            },
            u = f();
        if (t(u, r), o && !l) {
            var v = new a.IntersectionObserver(function(b) {
                t(b, function(b) {
                    if (b.isIntersecting || b.intersectionRatio) {
                        var c = b.target;
                        "requestIdleCallback" in a && k ? a.requestIdleCallback(function() {
                            q(c)
                        }, {
                            timeout: k
                        }) : q(c), v.unobserve(c), (u = u.filter(function(a) {
                            return a != c
                        })).length || m || v.disconnect()
                    }
                })
            }, {
                rootMargin: ("threshold" in c ? c.threshold : 200) + "px 0%"
            });
            t(u, v), m && t(f(c.observeRootSelector || "body"), function(a) {
                new MutationObserver(function() {
                    t(f(), function(a) {
                        0 > u.indexOf(a) && (u.push(a), r(a), o && !l ? v.observe(a) : (n || l) && t(u, q))
                    })
                }).observe(a, c.mutationObserverOptions || {
                    childList: !0,
                    subtree: !0
                })
            })
        } else(n || l) && t(u, q)
    }
}();
! function(q, a, b) {
    q.ripple = function(c, d) {
        var r = this,
            f = r.log = function() {
                r.defaults.debug && console && console.log && console.log.apply(console, arguments)
            };
        r.selector = c, r.defaults = {
            debug: !1,
            on: "mousedown",
            opacity: .4,
            color: "auto",
            multi: !1,
            duration: .7,
            rate: function(b) {
                return b
            },
            easing: "linear"
        }, r.defaults = q.extend({}, r.defaults, d);
        q(a).on(r.defaults.on, r.selector, function(a) {
            var c, g, s = q(this);
            if (s.addClass("has-ripple"), g = q.extend({}, r.defaults, s.data()), g.multi || !g.multi && 0 === s.find(".ripple").length) {
                if (c = q("<span></span>").addClass("ripple"), c.appendTo(s), f("Create: Ripple"), !c.height() && !c.width()) {
                    var h = b.max(s.outerWidth(), s.outerHeight());
                    c.css({
                        height: h,
                        width: h
                    }), f("Set: Ripple size")
                }
                if (g.rate && "function" == typeof g.rate) {
                    var i = b.round(c.width() / g.duration),
                        j = g.rate(i),
                        k = c.width() / j;
                    g.duration.toFixed(2) !== k.toFixed(2) && (f("Update: Ripple Duration", {
                        from: g.duration,
                        to: k
                    }), g.duration = k)
                }
                var l = "auto" == g.color ? s.css("color") : g.color,
                    m = {
                        animationDuration: g.duration.toString() + "s",
                        animationTimingFunction: g.easing,
                        background: l,
                        opacity: g.opacity
                    };
                f("Set: Ripple CSS", m), c.css(m)
            }
            g.multi || (f("Set: Ripple Element"), c = s.find(".ripple")), f("Destroy: Ripple Animation"), c.removeClass("ripple-animate");
            var n = a.pageX - s.offset().left - c.width() / 2,
                o = a.pageY - s.offset().top - c.height() / 2;
            g.multi && (f("Set: Ripple animationend event"), c.one("animationend webkitAnimationEnd oanimationend MSAnimationEnd", function() {
                f("Note: Ripple animation ended"), f("Destroy: Ripple"), q(this).remove()
            })), f("Set: Ripple location"), f("Set: Ripple animation"), c.css({
                top: o + "px",
                left: n + "px"
            }).addClass("ripple-animate")
        })
    }
}(jQuery, document, Math), $.ripple.version = "1.2.1",
    function() {
        'use strict';
        var a = "undefined" != typeof window && "undefined" != typeof window.document ? window.document : {},
            b = "undefined" != typeof module && module.exports,
            c = function() {
                for (var b, c = [
                        ["requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror"],
                        ["webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror"],
                        ["webkitRequestFullScreen", "webkitCancelFullScreen", "webkitCurrentFullScreenElement", "webkitCancelFullScreen", "webkitfullscreenchange", "webkitfullscreenerror"],
                        ["mozRequestFullScreen", "mozCancelFullScreen", "mozFullScreenElement", "mozFullScreenEnabled", "mozfullscreenchange", "mozfullscreenerror"],
                        ["msRequestFullscreen", "msExitFullscreen", "msFullscreenElement", "msFullscreenEnabled", "MSFullscreenChange", "MSFullscreenError"]
                    ], d = 0, e = c.length, f = {}; d < e; d++)
                    if (b = c[d], b && b[1] in a) {
                        for (d = 0; d < b.length; d++) f[c[0][d]] = b[d];
                        return f
                    } return !1
            }(),
            d = {
                change: c.fullscreenchange,
                error: c.fullscreenerror
            },
            e = {
                request: function(b) {
                    return new Promise(function(d, e) {
                        var f = function() {
                            this.off("change", f), d()
                        }.bind(this);
                        this.on("change", f), b = b || a.documentElement;
                        var g = b[c.requestFullscreen]();
                        g instanceof Promise && g.then(f).catch(e)
                    }.bind(this))
                },
                exit: function() {
                    return new Promise(function(b, d) {
                        if (!this.isFullscreen) return void b();
                        var e = function() {
                            this.off("change", e), b()
                        }.bind(this);
                        this.on("change", e);
                        var f = a[c.exitFullscreen]();
                        f instanceof Promise && f.then(e).catch(d)
                    }.bind(this))
                },
                toggle: function(a) {
                    return this.isFullscreen ? this.exit() : this.request(a)
                },
                onchange: function(a) {
                    this.on("change", a)
                },
                onerror: function(a) {
                    this.on("error", a)
                },
                on: function(b, c) {
                    var e = d[b];
                    e && a.addEventListener(e, c, !1)
                },
                off: function(b, c) {
                    var e = d[b];
                    e && a.removeEventListener(e, c, !1)
                },
                raw: c
            };
        return c ? void(Object.defineProperties(e, {
            isFullscreen: {
                get: function() {
                    return !!a[c.fullscreenElement]
                }
            },
            element: {
                enumerable: !0,
                get: function() {
                    return a[c.fullscreenElement]
                }
            },
            isEnabled: {
                enumerable: !0,
                get: function() {
                    return !!a[c.fullscreenEnabled]
                }
            }
        }), b ? module.exports = e : window.screenfull = e) : void(b ? module.exports = {
            isEnabled: !1
        } : window.screenfull = {
            isEnabled: !1
        })
    }(), $(document).ready(function() {
        null == document.cookie.match(/theme=dark/i) ? "" : $("body").addClass("darkmode")
    }), window.rippler = $.ripple(".btn, .btn-ln, .waves-effect", {
        multi: !0
    }), $(document).ready(function() {
        function a(a) {
            b = !0 == a.hasClass("is-active") || !0 == a.prop("checked") ? 1 : 0, 1 == b ? ($(".overlay").addClass("is-active"), $("body").addClass("noscroll")) : $("body, .overlay").removeClass("is-active noscroll")
        }
        var b = 0;
        $(".menu-toggle").on("click", function(b) {
            $(".mainav .menu ul").toggleClass("mobile-nav"), $(".menu-toggle, #fab").toggleClass("is-active"), $("#fabbuton").prop("checked", !1), a($(this)), b.preventDefault()
        });
        const c = $("html")[0];
        $("#fullscreen").on("click", function(a) {
            screenfull.isEnabled && screenfull.toggle(c), a.preventDefault()
        }), $("#fabbuton").on("change", function(b) {
            a($(this)), b.preventDefault()
        }), $(".overlay").on("click", function(a) {
            $("body, .overlay, .menu-toggle, #fab, .mainav .menu ul").removeClass("is-active noscroll mobile-nav"), $("#fabbuton").prop("checked", !1), a.preventDefault()
        }), $("#darkmode").on("click", function(a) {
            $("body").addClass("noscroll").toggleClass("darkmode");
            var b = $("body").hasClass("darkmode");
            document.cookie = "theme=" + (!0 == b ? "dark" : "light") + "; path=/", a.preventDefault()
        })
    });
var date = new Date;
$("#year").text(date.getFullYear()), $("#backtotop, #mainavlogo").on("click", function(a) {
    $("html, body").animate({
        scrollTop: 0
    }, 500), a.preventDefault()
}), $(".drop, #login").on("click", function(a) {
    $(this).hasClass("drop") && ($(this).toggleClass("open"))
});

function animate_dropdown() {
    $(".drop .drop-menu li").each(function() {
        var a = 100 * $(this).index() + "ms";
        $(this).css({
            "-webkit-transition-delay": a,
            "-moz-transition-delay": a,
            "-o-transition-delay": a,
            "transition-delay": a
        })
    })
}
animate_dropdown();

function get_header() {
    $.ajax({
        url: BASE_URL + "autentikasi/get_header",
        type: "POST",
        dataType: "json",
        cache: !1,
        success: function(a) {
            "ya" === a.status ? ($("#login").addClass("drop btn-anim").html(a.content), animate_dropdown()) : "tidak" === a.status && $("#login").removeClass("drop btn-anim").html("<a href=\"" + BASE_URL + "login\" class=\"waves-effect btn btn-anim btn-color\">Login</a>")
        },
        error: function(a) {
            let b = a.status + ": " + a.statusText;
            alert(b)
        }
    })
}

function logout(a) {
    a.preventDefault(), $.ajax({
        url: BASE_URL + "autentikasi/logout",
        type: "POST",
        dataType: "json",
        cache: !1,
        success: function(a) {
            "ya" === a.status && get_header()
        },
        error: function(a) {
            let b = a.status + ": " + a.statusText;
            alert(b)
        }
    })
}
get_header(), $("a[href=\"#search_popup\"]").click(function(a) {
    a.preventDefault(), $(this).modal({
        fadeDuration: 100
    })
}), $(window).on("scroll", function() {
    $("#sticky_nav").toggleClass("sticky", 35 < $(window).scrollTop()), 100 < $(this).scrollTop() ? $("#backtotop").removeClass("is-active") : $("#backtotop").addClass("is-active"), $("#fabbuton").prop("checked", !1), $("#fab").addClass("is-active"), clearTimeout($.data(this, "scrollCheck")), $.data(this, "scrollCheck", setTimeout(function() {
        !1 == $("body").hasClass("noscroll") && $("#fab").removeClass("is-active")
    }, 500))
}), ! function(a) {
    "object" == typeof module && "object" == typeof module.exports ? a(require("jquery"), window, document) : a(jQuery, window, document)
}(function(a, b, c) {
    var d = [],
        f = function() {
            return d.length ? d[d.length - 1] : null
        },
        e = function() {
            var a, b = !1;
            for (a = d.length - 1; 0 <= a; a--) d[a].$blocker && (d[a].$blocker.toggleClass("current", !b).toggleClass("behind", b), b = !0)
        };
    a.modal = function(b, c) {
        var g, h;
        if (this.$body = a("body"), this.options = a.extend({}, a.modal.defaults, c), this.options.doFade = !isNaN(parseInt(this.options.fadeDuration, 10)), this.$blocker = null, this.options.closeExisting)
            for (; a.modal.isActive();) a.modal.close();
        if (d.push(this), !b.is("a")) this.$elm = b, this.anchor = b, this.$body.append(this.$elm), this.open();
        else if (h = b.attr("href"), this.anchor = b, /^#/.test(h)) {
            if (this.$elm = a(h), 1 !== this.$elm.length) return null;
            this.$body.append(this.$elm), this.open()
        } else this.$elm = a("<div>"), this.$body.append(this.$elm), g = function(a, b) {
            b.elm.remove()
        }, this.showSpinner(), b.trigger(a.modal.AJAX_SEND), a.get(h).done(function(c) {
            if (a.modal.isActive()) {
                b.trigger(a.modal.AJAX_SUCCESS);
                var d = f();
                d.$elm.empty().append(c).on(a.modal.CLOSE, g), d.hideSpinner(), d.open(), b.trigger(a.modal.AJAX_COMPLETE)
            }
        }).fail(function() {
            b.trigger(a.modal.AJAX_FAIL);
            var c = f();
            c.hideSpinner(), d.pop(), b.trigger(a.modal.AJAX_COMPLETE)
        })
    }, a.modal.prototype = {
        constructor: a.modal,
        open: function() {
            var b = this;
            this.block(), this.anchor.blur(), this.options.doFade ? setTimeout(function() {
                b.show()
            }, this.options.fadeDuration * this.options.fadeDelay) : this.show(), a(c).off("keydown.modal").on("keydown.modal", function(a) {
                var b = f();
                27 === a.which && b.options.escapeClose && b.close()
            }), this.options.clickClose && this.$blocker.click(function(b) {
                b.target === this && a.modal.close()
            })
        },
        close: function() {
            d.pop(), this.unblock(), this.hide(), a.modal.isActive() || a(c).off("keydown.modal")
        },
        block: function() {
            this.$elm.trigger(a.modal.BEFORE_BLOCK, [this._ctx()]), this.$body.css("overflow", "hidden"), this.$blocker = a("<div class=\"" + this.options.blockerClass + " blocker current\"></div>").appendTo(this.$body), e(), this.options.doFade && this.$blocker.css("opacity", 0).animate({
                opacity: 1
            }, this.options.fadeDuration), this.$elm.trigger(a.modal.BLOCK, [this._ctx()])
        },
        unblock: function(b) {
            !b && this.options.doFade ? this.$blocker.fadeOut(this.options.fadeDuration, this.unblock.bind(this, !0)) : (this.$blocker.children().appendTo(this.$body), this.$blocker.remove(), this.$blocker = null, e(), a.modal.isActive() || this.$body.css("overflow", ""))
        },
        show: function() {
            this.$elm.trigger(a.modal.BEFORE_OPEN, [this._ctx()]), this.options.showClose && (this.closeButton = a("<a href=\"#close-modal\" rel=\"modal:close\" class=\"close-modal " + this.options.closeClass + "\">" + this.options.closeText + "</a>"), this.$elm.append(this.closeButton)), this.$elm.addClass(this.options.modalClass).appendTo(this.$blocker), this.options.doFade ? this.$elm.css({
                opacity: 0,
                display: "inline-block"
            }).animate({
                opacity: 1
            }, this.options.fadeDuration) : this.$elm.css("display", "inline-block"), this.$elm.trigger(a.modal.OPEN, [this._ctx()])
        },
        hide: function() {
            this.$elm.trigger(a.modal.BEFORE_CLOSE, [this._ctx()]), this.closeButton && this.closeButton.remove();
            var b = this;
            this.options.doFade ? this.$elm.fadeOut(this.options.fadeDuration, function() {
                b.$elm.trigger(a.modal.AFTER_CLOSE, [b._ctx()])
            }) : this.$elm.hide(0, function() {
                b.$elm.trigger(a.modal.AFTER_CLOSE, [b._ctx()])
            }), this.$elm.trigger(a.modal.CLOSE, [this._ctx()])
        },
        showSpinner: function() {
            this.options.showSpinner && (this.spinner = this.spinner || a("<div class=\"" + this.options.modalClass + "-spinner\"></div>").append(this.options.spinnerHtml), this.$body.append(this.spinner), this.spinner.show())
        },
        hideSpinner: function() {
            this.spinner && this.spinner.remove()
        },
        _ctx: function() {
            return {
                elm: this.$elm,
                $elm: this.$elm,
                $blocker: this.$blocker,
                options: this.options
            }
        }
    }, a.modal.close = function(b) {
        if (a.modal.isActive()) {
            b && b.preventDefault();
            var c = f();
            return c.close(), c.$elm
        }
    }, a.modal.isActive = function() {
        return 0 < d.length
    }, a.modal.getCurrent = f, a.modal.defaults = {
        closeExisting: !0,
        escapeClose: !0,
        clickClose: !0,
        closeText: "Close",
        closeClass: "",
        modalClass: "modal",
        blockerClass: "jquery-modal",
        spinnerHtml: "<div class=\"rect1\"></div><div class=\"rect2\"></div><div class=\"rect3\"></div><div class=\"rect4\"></div>",
        showSpinner: !0,
        showClose: !0,
        fadeDuration: null,
        fadeDelay: 1
    }, a.modal.BEFORE_BLOCK = "modal:before-block", a.modal.BLOCK = "modal:block", a.modal.BEFORE_OPEN = "modal:before-open", a.modal.OPEN = "modal:open", a.modal.BEFORE_CLOSE = "modal:before-close", a.modal.CLOSE = "modal:close", a.modal.AFTER_CLOSE = "modal:after-close", a.modal.AJAX_SEND = "modal:ajax:send", a.modal.AJAX_SUCCESS = "modal:ajax:success", a.modal.AJAX_FAIL = "modal:ajax:fail", a.modal.AJAX_COMPLETE = "modal:ajax:complete", a.fn.modal = function(b) {
        return 1 === this.length && new a.modal(this, b), this
    }, a(c).on("click.modal", "a[rel~=\"modal:close\"]", a.modal.close), a(c).on("click.modal", "a[rel~=\"modal:open\"]", function(b) {
        b.preventDefault(), a(this).modal()
    })
}), $(".md-select").on("click", function() {
    $(this).toggleClass("active")
}), $(".md-select ul li").on("click", function() {
    let a = $(this).text(),
        b = $(this).attr("id");
    $(".md-select ul li").not($(this)).removeClass("active"), $(this).addClass("active"), $(".md-select label button").text(a), $(".md-select").attr("data-select", b), $("#all_author").attr("data-limit", 0), $("#authorsearch").val(""), $(".authormore .btn").show(), $(".authormore .alert").remove(), load_data(0, b, "", !0)
});

function load_data(a, b = "", c = "", d = !1) {
    $.ajax({
        url: BASE_URL + "penulis/author/all_users",
        method: "POST",
        data: {
            limit: 3,
            start: a,
            order: b,
            search: c
        },
        cache: !1,
        beforeSend: function() {
            !0 == d && $(".profil").remove();
            for (let a = 1; 3 >= a; a++) $("#all_author").append("<div class=\"profil loading\"></div>")
        },
        success: function(b) {
            setTimeout(() => {
                if ($(".profil.loading").remove(), "" == b) $(".authormore").prepend("<div class=\"alert alert-danger\">Tidak ada user!</div>"), $(".authormore .btn").hide();
                else {
                    $("#all_author").append(b);
                    let c = $(b).filter(".profil").length,
                        d = parseInt(a) + c;
                    $("#all_author").attr("data-limit", d), 3 !== c && ($(".authormore").prepend("<div class=\"alert alert-danger\">Sudah tidak ada user lagi!</div>"), $(".authormore .btn").hide())
                }
                setTimeout(() => yall({
                    target: "lazy"
                }), 500)
            }, 750)
        },
        error: function(a) {
            let b = a.status + ": " + a.statusText;
            $(".authormore").prepend("<div class=\"alert alert-danger\">" + b + "</div>"), $(".authormore .btn").remove()
        }
    })
}
load_data(0), $(".authormore .btn").on("click", function(a) {
    let b = $("#all_author").attr("data-limit"),
        c = $(".md-select").attr("data-select"),
        d = $("#authorsearch").val();
    load_data(b, c, d), a.preventDefault()
}), $("#search_author").on("click", function(a) {
    $("#all_author").attr("data-limit", 0);
    let b = $(".md-select").attr("data-select"),
        c = $("#authorsearch").val();
    $(".authormore .alert").remove(), $(".authormore .btn").show(), load_data(0, b, c, !0), a.preventDefault()
});