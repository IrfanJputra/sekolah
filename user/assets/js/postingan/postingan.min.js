var yall = function() {
    "use strict";
    return function(c) {
        var h = (c = c || {}).lazyClass || "lazy",
            j = c.lazyBackgroundClass || "lazy-bg",
            k = "idleLoadTimeout" in c ? c.idleLoadTimeout : 200,
            m = c.observeChanges || !1,
            i = c.events || {},
            n = c.noPolyfill || !1,
            a = window,
            o = "IntersectionObserver" in a && "IntersectionObserverEntry" in a,
            l = /baidu|(?:google|bing|yandex|duckduck)bot/i.test(navigator.userAgent),
            d = ["srcset", "src", "poster"],
            p = [],
            f = function(a, b) {
                return p.slice.call((b || document).querySelectorAll(a || "img." + h + ",video." + h + ",iframe." + h + ",." + j))
            },
            q = function(a) {
                var b = a.parentNode;
                "PICTURE" == b.nodeName && t(f("source", b), s), "VIDEO" == a.nodeName && t(f("source", a), s), s(a);
                var d = a.classList;
                d.contains(j) && (d.remove(j), d.add(c.lazyBackgroundLoaded || "lazy-bg-loaded"))
            },
            r = function(a) {
                for (var b in i) a.addEventListener(b, i[b].listener || i[b], i[b].options || void 0)
            },
            s = function(a) {
                for (var b in d)
                    if (d[b] in a.dataset) {
                        a.setAttribute(d[b], a.dataset[d[b]]);
                        var c = a.parentNode;
                        "SOURCE" === a.nodeName && c.autoplay && (c.load(), /Trident/.test(navigator.userAgent) && c.play(), c.classList.remove(h)), a.classList.remove(h)
                    }
            },
            t = function(b, c) {
                for (var d = 0; d < b.length; d++) a.IntersectionObserver && c instanceof a.IntersectionObserver ? c.observe(b[d]) : c(b[d])
            },
            u = f();
        if (t(u, r), o && !l) {
            var v = new a.IntersectionObserver(function(b) {
                t(b, function(b) {
                    if (b.isIntersecting || b.intersectionRatio) {
                        var c = b.target;
                        "requestIdleCallback" in a && k ? a.requestIdleCallback(function() {
                            q(c)
                        }, {
                            timeout: k
                        }) : q(c), v.unobserve(c), (u = u.filter(function(a) {
                            return a != c
                        })).length || m || v.disconnect()
                    }
                })
            }, {
                rootMargin: ("threshold" in c ? c.threshold : 200) + "px 0%"
            });
            t(u, v), m && t(f(c.observeRootSelector || "body"), function(a) {
                new MutationObserver(function() {
                    t(f(), function(a) {
                        0 > u.indexOf(a) && (u.push(a), r(a), o && !l ? v.observe(a) : (n || l) && t(u, q))
                    })
                }).observe(a, c.mutationObserverOptions || {
                    childList: !0,
                    subtree: !0
                })
            })
        } else(n || l) && t(u, q)
    }
}();
! function(q, a, b) {
    q.ripple = function(c, d) {
        var r = this,
            f = r.log = function() {
                r.defaults.debug && console && console.log && console.log.apply(console, arguments)
            };
        r.selector = c, r.defaults = {
            debug: !1,
            on: "mousedown",
            opacity: .4,
            color: "auto",
            multi: !1,
            duration: .7,
            rate: function(b) {
                return b
            },
            easing: "linear"
        }, r.defaults = q.extend({}, r.defaults, d);
        q(a).on(r.defaults.on, r.selector, function(a) {
            var c, g, s = q(this);
            if (s.addClass("has-ripple"), g = q.extend({}, r.defaults, s.data()), g.multi || !g.multi && 0 === s.find(".ripple").length) {
                if (c = q("<span></span>").addClass("ripple"), c.appendTo(s), f("Create: Ripple"), !c.height() && !c.width()) {
                    var h = b.max(s.outerWidth(), s.outerHeight());
                    c.css({
                        height: h,
                        width: h
                    }), f("Set: Ripple size")
                }
                if (g.rate && "function" == typeof g.rate) {
                    var i = b.round(c.width() / g.duration),
                        j = g.rate(i),
                        k = c.width() / j;
                    g.duration.toFixed(2) !== k.toFixed(2) && (f("Update: Ripple Duration", {
                        from: g.duration,
                        to: k
                    }), g.duration = k)
                }
                var l = "auto" == g.color ? s.css("color") : g.color,
                    m = {
                        animationDuration: g.duration.toString() + "s",
                        animationTimingFunction: g.easing,
                        background: l,
                        opacity: g.opacity
                    };
                f("Set: Ripple CSS", m), c.css(m)
            }
            g.multi || (f("Set: Ripple Element"), c = s.find(".ripple")), f("Destroy: Ripple Animation"), c.removeClass("ripple-animate");
            var n = a.pageX - s.offset().left - c.width() / 2,
                o = a.pageY - s.offset().top - c.height() / 2;
            g.multi && (f("Set: Ripple animationend event"), c.one("animationend webkitAnimationEnd oanimationend MSAnimationEnd", function() {
                f("Note: Ripple animation ended"), f("Destroy: Ripple"), q(this).remove()
            })), f("Set: Ripple location"), f("Set: Ripple animation"), c.css({
                top: o + "px",
                left: n + "px"
            }).addClass("ripple-animate")
        })
    }
}(jQuery, document, Math), $.ripple.version = "1.2.1",
    function() {
        'use strict';
        var a = "undefined" != typeof window && "undefined" != typeof window.document ? window.document : {},
            b = "undefined" != typeof module && module.exports,
            c = function() {
                for (var b, c = [
                        ["requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror"],
                        ["webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror"],
                        ["webkitRequestFullScreen", "webkitCancelFullScreen", "webkitCurrentFullScreenElement", "webkitCancelFullScreen", "webkitfullscreenchange", "webkitfullscreenerror"],
                        ["mozRequestFullScreen", "mozCancelFullScreen", "mozFullScreenElement", "mozFullScreenEnabled", "mozfullscreenchange", "mozfullscreenerror"],
                        ["msRequestFullscreen", "msExitFullscreen", "msFullscreenElement", "msFullscreenEnabled", "MSFullscreenChange", "MSFullscreenError"]
                    ], d = 0, e = c.length, f = {}; d < e; d++)
                    if (b = c[d], b && b[1] in a) {
                        for (d = 0; d < b.length; d++) f[c[0][d]] = b[d];
                        return f
                    } return !1
            }(),
            d = {
                change: c.fullscreenchange,
                error: c.fullscreenerror
            },
            e = {
                request: function(b) {
                    return new Promise(function(d, e) {
                        var f = function() {
                            this.off("change", f), d()
                        }.bind(this);
                        this.on("change", f), b = b || a.documentElement;
                        var g = b[c.requestFullscreen]();
                        g instanceof Promise && g.then(f).catch(e)
                    }.bind(this))
                },
                exit: function() {
                    return new Promise(function(b, d) {
                        if (!this.isFullscreen) return void b();
                        var e = function() {
                            this.off("change", e), b()
                        }.bind(this);
                        this.on("change", e);
                        var f = a[c.exitFullscreen]();
                        f instanceof Promise && f.then(e).catch(d)
                    }.bind(this))
                },
                toggle: function(a) {
                    return this.isFullscreen ? this.exit() : this.request(a)
                },
                onchange: function(a) {
                    this.on("change", a)
                },
                onerror: function(a) {
                    this.on("error", a)
                },
                on: function(b, c) {
                    var e = d[b];
                    e && a.addEventListener(e, c, !1)
                },
                off: function(b, c) {
                    var e = d[b];
                    e && a.removeEventListener(e, c, !1)
                },
                raw: c
            };
        return c ? void(Object.defineProperties(e, {
            isFullscreen: {
                get: function() {
                    return !!a[c.fullscreenElement]
                }
            },
            element: {
                enumerable: !0,
                get: function() {
                    return a[c.fullscreenElement]
                }
            },
            isEnabled: {
                enumerable: !0,
                get: function() {
                    return !!a[c.fullscreenEnabled]
                }
            }
        }), b ? module.exports = e : window.screenfull = e) : void(b ? module.exports = {
            isEnabled: !1
        } : window.screenfull = {
            isEnabled: !1
        })
    }();
(function(a, b) {
    'use strict';
    var c = function(a) {
        this.elem = a
    };
    c.init = function() {
        var a, d = b.querySelectorAll("[data-sharer]"),
            e = d.length;
        for (a = 0; a < e; a++) d[a].addEventListener("click", c.add)
    }, c.add = function(a) {
        var b = a.currentTarget || a.srcElement,
            d = new c(b);
        d.share()
    }, c.prototype = {
        constructor: c,
        getValue: function(a) {
            var b = this.elem.getAttribute("data-" + a);
            return b && "hashtag" === a && !b.startsWith("#") && (b = "#" + b), b
        },
        share: function() {
            var a = this.getValue("sharer").toLowerCase(),
                b = {
                    facebook: {
                        shareUrl: "https://www.facebook.com/sharer/sharer.php/",
                        params: {
                            u: this.getValue("url"),
                            hashtag: this.getValue("hashtag"),
                            quote: this.getValue("title")
                        }
                    },
                    linkedin: {
                        shareUrl: "https://www.linkedin.com/sharing/share-offsite",
                        params: {
                            url: this.getValue("url"),
                            mini: !0
                        }
                    },
                    twitter: {
                        shareUrl: "https://twitter.com/intent/tweet/",
                        params: {
                            text: this.getValue("title"),
                            url: this.getValue("url"),
                            hashtags: this.getValue("hashtags")
                        }
                    },
                    email: {
                        shareUrl: "mailto:" + this.getValue("to") || "",
                        params: {
                            subject: this.getValue("subject"),
                            body: this.getValue("title") + "\n" + this.getValue("url")
                        },
                        isLink: !0
                    },
                    whatsapp: {
                        shareUrl: null === this.getValue("web") ? "whatsapp://send" : "https://api.whatsapp.com/send",
                        params: {
                            text: this.getValue("title") + " " + this.getValue("url")
                        },
                        isLink: !0
                    },
                    telegram: {
                        shareUrl: null === this.getValue("web") ? "tg://msg_url" : "https://telegram.me/share",
                        params: {
                            text: this.getValue("title"),
                            url: this.getValue("url")
                        },
                        isLink: !0
                    },
                },
                c = b[a];
            return c && (c.width = this.getValue("width"), c.height = this.getValue("height")), void 0 !== c && this.urlSharer(c)
        },
        urlSharer: function(b) {
            var c, d = b.params || {},
                e = Object.keys(d),
                f = 0 < e.length ? "?" : "";
            for (c = 0; c < e.length; c++) "?" !== f && (f += "&"), d[e[c]] && (f += e[c] + "=" + encodeURIComponent(d[e[c]]));
            if (b.shareUrl += f, !b.isLink) {
                var g = b.width || 600,
                    h = b.height || 480,
                    j = a.innerWidth / 2 - g / 2 + a.screenX,
                    k = a.innerHeight / 2 - h / 2 + a.screenY,
                    l = a.open(b.shareUrl, "", "scrollbars=no, width=" + g + ", height=" + h + ", top=" + k + ", left=" + j);
                a.focus && l.focus()
            } else a.location.href = b.shareUrl
        }
    }, "complete" === b.readyState || "loading" !== b.readyState ? c.init() : b.addEventListener("DOMContentLoaded", c.init), a.Sharer = c
})(window, document), $(document).ready(function() {
    null == document.cookie.match(/theme=dark/i) ? "" : $("body").addClass("darkmode")
}), window.rippler = $.ripple(".btn, .btn-ln, .waves-effect", {
    multi: !0
}), $(document).ready(function() {
    function a(a) {
        b = !0 == a.hasClass("is-active") || !0 == a.prop("checked") ? 1 : 0, 1 == b ? ($(".overlay").addClass("is-active"), $("body").addClass("noscroll")) : $("body, .overlay").removeClass("is-active noscroll")
    }
    var b = 0;
    $(".menu-toggle").on("click", function(b) {
        $(".mainav .menu ul").toggleClass("mobile-nav"), $(".menu-toggle, #fab").toggleClass("is-active"), $("#fabbuton").prop("checked", !1), a($(this)), b.preventDefault()
    });
    const c = $("html")[0];
    $("#fullscreen").on("click", function(a) {
        screenfull.isEnabled && screenfull.toggle(c), a.preventDefault()
    }), $("#fabbuton").on("change", function(b) {
        a($(this)), b.preventDefault()
    }), $(".overlay").on("click", function(a) {
        $("body, .overlay, .menu-toggle, #fab, .mainav .menu ul").removeClass("is-active noscroll mobile-nav"), $("#fabbuton").prop("checked", !1), a.preventDefault()
    }), $("#darkmode").on("click", function(a) {
        $("body").addClass("noscroll").toggleClass("darkmode");
        var b = $("body").hasClass("darkmode");
        document.cookie = "theme=" + (!0 == b ? "dark" : "light") + "; path=/", a.preventDefault()
    })
});
var date = new Date;
$("#year").text(date.getFullYear()), $("#backtotop, #mainavlogo").on("click", function(a) {
    $("html, body").animate({
        scrollTop: 0
    }, 500), a.preventDefault()
}), $(".drop, #login").on("click", function() {
    $(this).hasClass("drop") && $(this).toggleClass("open")
});

function animate_dropdown() {
    $(".drop .drop-menu li").each(function() {
        var a = 100 * $(this).index() + "ms";
        $(this).css({
            "-webkit-transition-delay": a,
            "-moz-transition-delay": a,
            "-o-transition-delay": a,
            "transition-delay": a
        })
    })
}
animate_dropdown();

function get_header() {
    $.ajax({
        url: BASE_URL + "autentikasi/get_header",
        type: "POST",
        dataType: "json",
        cache: !1,
        success: function(a) {
            "ya" === a.status ? ($("#login").addClass("drop btn-anim").html(a.content), animate_dropdown()) : "tidak" === a.status && $("#login").removeClass("drop btn-anim").html("<a href=\"" + BASE_URL + "login\" class=\"waves-effect btn btn-anim btn-color\">Login</a>")
        },
        error: function(a) {
            let b = a.status + ": " + a.statusText;
            
        }
    })
}

function logout(a) {
    a.preventDefault(), $.ajax({
        url: BASE_URL + "autentikasi/logout",
        type: "POST",
        dataType: "json",
        cache: !1,
        success: function(a) {
            "ya" === a.status && get_header()
        },
        error: function(a) {
            let b = a.status + ": " + a.statusText;
            
        }
    })
}
get_header(), $("a[href=\"#search_popup\"]").click(function(a) {
        a.preventDefault(), $(this).modal({
            fadeDuration: 100
        })
    }), $(window).on("scroll", function() {
        $("#sticky_nav").toggleClass("sticky", 35 < $(window).scrollTop()), 100 < $(this).scrollTop() ? $("#backtotop").removeClass("is-active") : $("#backtotop").addClass("is-active"), $("#fabbuton").prop("checked", !1), $("#fab").addClass("is-active"), clearTimeout($.data(this, "scrollCheck")), $.data(this, "scrollCheck", setTimeout(function() {
            !1 == $("body").hasClass("noscroll") && $("#fab").removeClass("is-active")
        }, 500))
    }), $(document).ready(function() {
        $(".bg-image").each(function() {
            const a = $(this).data("image");
            $(this).css("background-image", "url(\"" + a + "\")")
        })
    }),
    function(a) {
        a.fn.maxlength = function(b) {
            var c = a.extend({}, a.fn.maxlength.defaults, b),
                d = "<span class=\"text-limit\"><span data-val-length=\"target\"></span><span data-val-length=\"max\"></span></span>";
            return this.each(function() {
                var b = a(this),
                    e = b.find("[maxlength]"),
                    f = b.find(c.parent),
                    g = e.attr("maxlength");
                b.find(".text-limit").length || (f.length ? f.append(d) : b.append(d), b.find(c.target).html(e.val().length), b.find(c.maxTarget).html("/" + g), b.on("keyup", c.valName, function(a) {
                    var d = a.currentTarget,
                        e = d.value;
                    e.length > g && (d.value = e.substr(0, g)), b.find(c.target).html(d.value.length)
                }))
            })
        }, a.fn.maxlength.defaults = {
            valName: "[maxlength]",
            target: "[data-val-length=target]",
            maxTarget: "[data-val-length=max]",
            parent: "[data-val-length=parent]"
        }
    }(jQuery), $(".comment .commentinput").maxlength(), eval(function(c, d, e, f, j, k) {
        if (j = function(b) {
                return (b < d ? "" : j(parseInt(b / d))) + (35 < (b %= d) ? String.fromCharCode(b + 29) : b.toString(36))
            }, !"".replace(/^/, String)) {
            for (; e--;) k[j(e)] = f[e] || j(e);
            f = [function(b) {
                return k[b]
            }], j = function() {
                return "\\w+"
            }, e = 1
        }
        for (; e--;) f[e] && (c = c.replace(new RegExp("\\b" + j(e) + "\\b", "g"), f[e]));
        return c
    }("o a=[\"\\r\\b\\q\\y\\e\\x\",\"\\O\",\"\\K\\s\\m\\M\\B\\w\\r\\f\\p\\p\\X\\P\\p\\x\\h\\l\\e\\w\\h\\s\\b\\B\\p\\x\\h\\l\\e\\w\\h\\s\\b\\1c\",\"\\P\",\"\\O\\E\",\"\\Q\",\"\\E\\Q\",\"\\m\\q\\s\\b\\Y\\1b\\S\",\"\",\"\\p\\t\\H\\p\\e\\l\\m\\q\\y\",\"\\K\\E\\s\\m\\M\\D\",\"\\l\\b\\C\\r\\f\\w\\b\",\"\\D\\K\\E\\s\\m\\M\\D\",\"\\D\",\"\\T\\h\\t\\e\\t\\H\\b\",\"\\y\\h\\h\\y\\r\\b\\Z\\z\\f\\C\\p\",\"\\m\\S\\l\\f\\z\\b\",\"\\e\\f\\x\\t\\q\",\"\\r\\m\\q\\1d\",\"\\H\\t\\e\\e\\h\\q\",\"\\y\\l\\h\\t\\C\",\"\\y\\f\\z\\H\\f\\l\",\"\\1a\\t\\h\\e\\b\",\"\\x\\e\\z\\r\",\"\\b\\f\\w\\x\",\"\\z\\f\\m\\q\\B\\f\\l\\e\\m\\w\\r\\b\\B\\C\",\"\\l\\b\\f\\s\\T\"];$(1j)[a[1m]](N(){N c(c){R(o L=!1,v=0;v<i[a[0]];v++){o J=a[1]+i[v],U=a[2]+i[v]+a[3],u=a[4]+i[v]+a[5],A=a[6],g=0,F=0,G=0;R(j=0;1k>j;j++){g=c[a[7]](J,g);o I=!0,d=a[8];1e(-1!=g){o k=c[a[7]](u,g),n=c[a[7]](A,g);-1!=k&&-1==n||-1!=k&&-1!=n&&k<n?(d=c[a[9]](g,k+u[a[0]]),d=d[a[11]](u,a[10]),F=k,G=u[a[0]]):-1==k&&-1!=n||-1!=k&&-1!=n&&k>n?(d=c[a[9]](g,n+A[a[0]]),d=d[a[11]](u,a[12]),F=n,G=A[a[0]]):I=!1}1h{1i};I&&(L=!0,d=d[a[11]](J,U),d=d[a[11]](a[5],a[13]),c=c[a[9]](0,g)+d+c[a[9]](F+G)),g++}};1f L?c:a[8]}o i=[a[14],a[15],a[16],a[17],a[18],a[19],a[1l],a[1g],a[1n]];$(a[1p])[a[1o]](N(){o i=$(W)[a[V]]();i=c(i),a[8]!=i&&$(W)[a[V]](i)})})", 62, 88, ["", "", "", "", "", "", "", "", "", "", "_0", "x65", "_1", "_2", "x74", "x61", "_3", "x6F", "_4", "", "_5", "x72", "x69", "_6", "var", "x73", "x6E", "x6C", "x64", "x75", "_7", "_8", "x63", "x68", "x67", "x6D", "_9", "x20", "x70", "x3E", "x2F", "_10", "_11", "x62", "_13", "_12", "x3C", "_14", "x76", "function", "x5B", "x22", "x5D", "for", "x66", "x79", "_15", "23", "this", "x3D", "x78", "x5F", "", "", "", "", "", "", "", "", "", "", "x71", "x4F", "x2D", "x6B", "if", "return", "21", "else", "break", "document", "100", "20", "26", "22", "24", "25"], 0, {})), $(document).ready(function() {
        $(".shortcode-youtube").each(function() {
            var i = !1,
                j = "",
                k = $(this).attr("src"),
                c = $(this).attr("playlist"),
                l = $(this).attr("start"),
                m = $(this).attr("stop"),
                n = $(this).attr("control");
            if ((null != k || null != c) && ("" != k || "" != c ? (("" == c || null == c) && (c = ""), i = !0) : (i = !1, j = "Tidak ada perintah embed!")), null == l || "" == l ? l = "" : Number.isInteger(l) && (i = !1, j = "Data start bukan bilangan numerik!"), null == m || "" == m ? m = "" : Number.isInteger(m) && (i = !1, j = "Data stop bukan bilangan numerik!"), n = "0" == n ? "0" : null == n || "" == n || "1" == n ? "1" : "1", !0 == i) var o = `<div class="youtube_responsive"><iframe src="https://www.youtube.com/embed/${k}?list=${c}&amp;start=${Math.abs(parseInt(l))}&amp;end=${Math.abs(parseInt(m))}&amp;controls=${n}"frameborder="0"scrolling="no"margin="0"height="0"width="0"gesture="media"allow="autoplay; encrypted-media"allowfullscreen></iframe></div>`;
            else var o = `<div className="alert">${j}</div>`;
            $(this).replaceWith(o)
        }), $(".shortcode-google_maps").each(function() {
            var f = !1,
                g = "",
                h = $(this).attr("src"),
                c = $(this).html();
            if (null == h || "" == h ? g = "Tidak ada link Google Maps!" : f = !0, !0 == f) var d = `<div class="maps_responsive"><iframe src="https://www.google.com/maps/embed?pb=${h}"frameborder="0"scrolling="no"margin="0"height="0"width="0"allowfullscreen></iframe></div>`;
            else var d = `<div className="alert">${g}</div>`;
            $(this).replaceWith(d)
        }), $(".shortcode-google_maps").each(function() {
            var e = !1,
                f = "",
                g = $(this).attr("src");
            if (null == g || "" == g ? f = "Tidak ada link Google Maps!" : e = !0, !0 == e) var c = `<div class="maps_responsive"><iframe src="https://www.google.com/maps/embed?pb=${g}"frameborder="0"scrolling="no"margin="0"height="0"width="0"allowfullscreen></iframe></div>`;
            else var c = `<div className="alert">${f}</div>`;
            $(this).replaceWith(c)
        }), $(".shortcode-iframe").each(function() {
            var g = !1,
                h = "no",
                i = "",
                j = $(this).attr("src"),
                d = $(this).attr("type");
            if (null == j || "" == j ? i = "Tidak ada link embed Iframe!" : g = !0, "dokumen" == d || "website" == d ? (d = d, h = "yes") : d = "", !0 == g) var k = `<div class="iframe_responsive ${d}"><iframe src="${j}"frameborder="0"scrolling="${h}"margin="0"height="0"width="0"allowfullscreen></iframe></div>`;
            else var k = `<div className="alert">${i}</div>`;
            $(this).replaceWith(k)
        }), $(".shortcode-tahun").each(function() {
            var d = $(this).attr("dari");
            let a = new Date;
            tahun = a.getUTCFullYear(), tahun = null == d || "" == d ? tahun : 4 == d.length ? d == tahun ? "tahun ini" : parseInt(d) < tahun ? `${tahun-d}tahun lalu` : `${Math.abs(tahun-d)}tahun lagi` : tahun;
            var b = `<span>${tahun}</span>`;
            $(this).replaceWith(b)
        }), $(".shortcode-link").each(function() {
            var g = !1,
                h = "",
                i = $(this).attr("href"),
                c = $(this).attr("target"),
                j = $(this).html();
            if (null == i || "" == i ? h = "Tidak ada link terkait!" : g = !0, (null == j || "" == j) && (j = i), c = "blank" == c ? "target=\"_blank\"" : "", !0 == g) var k = `<a href="${i}"${c}rel="noopener noreferrer">${j}</a>`;
            else var k = `<div className="alert">${h}</div>`;
            $(this).replaceWith(k)
        }), $(".shortcode-button").each(function() {
            var k = !1,
                l = "",
                m = $(this).attr("href"),
                c = $(this).attr("target"),
                n = $(this).attr("icon"),
                o = $(this).attr("icon_posisi"),
                p = $(this).attr("ukuran"),
                q = $(this).attr("nama"),
                h = $(this).html();
            if (null == m || "" == m ? l = "Tidak ada link pada tombol!" : k = !0, (null == h || "" == h) && (null == q || "" == q ? h = m : h = q), c = "blank" == c ? "target=\"_blank\"" : "", p = "besar" == p || "kecil" == p ? p : "", null == n || "" == n ? n = "" : (o = "kanan" == o || "kiri" == o ? `icon_${o}` : "icon_kanan", n = `<i class="fa ${n}"></i>`), !0 == k) var r = `<a class="btn btn-anim btn-ln ${o} ${p}"href="${m}"${c}rel="noopener noreferrer">${n}${h}</a>`;
            else var r = `<div className="alert">${l}</div>`;
            $(this).replaceWith(r)
        }), $(".shortcode-group").each(function() {
            var e = !1,
                f = "",
                g = $(this).html();
            if (null == g || "" == g ? f = "Tidak ada isinya!" : e = !0, !0 == e) var c = `<div class="group">${g}</div>`;
            else var c = `<div className="alert">${f}</div>`;
            $(this).replaceWith(c)
        }), $(".shortcode-gambar").each(function() {
            var k = !1,
                l = "",
                m = "",
                n = "",
                o = "",
                p = $(this).attr("src"),
                f = $(this).attr("caption"),
                q = $(this).attr("ukuran"),
                r = $(this).attr("group");
            if (null == p || "" == p ? l = "Tidak ada link pada tombol!" : k = !0, r = null == r || "" == r ? "" : `="${r}"`, null == f || "" == f ? f = "" : (m = `alt="${f}"`, o = "caption", n = `<figcaption>${f}</figcaption>`), q = "besar" == q || "sedang" == q || "kecil" == q ? q : "standar", !0 == k) var s = `<figure class="group image ${o}"><a href="${p}"class=" waves-effect ${q}"data-fancybox${r}data-caption="${f}"><img src="${p}"${m}/>${n}</a></figure>`;
            else var s = `<div className="alert">${l}</div>`;
            $(this).replaceWith(s)
        }), $(".shortcode-quote").each(function() {
            var f = !1,
                g = "",
                h = $(this).html(),
                c = $(this).attr("nama");
            if (null == h || "" == h ? g = "Tidak ada quotesnya!" : f = !0, c = null == c || "" == c ? "" : `<span class="cite"><cite title="${c}">${c}</cite></span>`, !0 == f) var i = `<div class="quotewrap btn-anim"><blockquote><p>${h}</p>${c}</blockquote></div>`;
            else var i = `<div className="alert">${g}</div>`;
            $(this).replaceWith(i)
        })
    }), ! function(a) {
        "object" == typeof module && "object" == typeof module.exports ? a(require("jquery"), window, document) : a(jQuery, window, document)
    }(function(a, b, c) {
        var d = [],
            f = function() {
                return d.length ? d[d.length - 1] : null
            },
            e = function() {
                var a, b = !1;
                for (a = d.length - 1; 0 <= a; a--) d[a].$blocker && (d[a].$blocker.toggleClass("current", !b).toggleClass("behind", b), b = !0)
            };
        a.modal = function(b, c) {
            var g, h;
            if (this.$body = a("body"), this.options = a.extend({}, a.modal.defaults, c), this.options.doFade = !isNaN(parseInt(this.options.fadeDuration, 10)), this.$blocker = null, this.options.closeExisting)
                for (; a.modal.isActive();) a.modal.close();
            if (d.push(this), !b.is("a")) this.$elm = b, this.anchor = b, this.$body.append(this.$elm), this.open();
            else if (h = b.attr("href"), this.anchor = b, /^#/.test(h)) {
                if (this.$elm = a(h), 1 !== this.$elm.length) return null;
                this.$body.append(this.$elm), this.open()
            } else this.$elm = a("<div>"), this.$body.append(this.$elm), g = function(a, b) {
                b.elm.remove()
            }, this.showSpinner(), b.trigger(a.modal.AJAX_SEND), a.get(h).done(function(c) {
                if (a.modal.isActive()) {
                    b.trigger(a.modal.AJAX_SUCCESS);
                    var d = f();
                    d.$elm.empty().append(c).on(a.modal.CLOSE, g), d.hideSpinner(), d.open(), b.trigger(a.modal.AJAX_COMPLETE)
                }
            }).fail(function() {
                b.trigger(a.modal.AJAX_FAIL);
                var c = f();
                c.hideSpinner(), d.pop(), b.trigger(a.modal.AJAX_COMPLETE)
            })
        }, a.modal.prototype = {
            constructor: a.modal,
            open: function() {
                var b = this;
                this.block(), this.anchor.blur(), this.options.doFade ? setTimeout(function() {
                    b.show()
                }, this.options.fadeDuration * this.options.fadeDelay) : this.show(), a(c).off("keydown.modal").on("keydown.modal", function(a) {
                    var b = f();
                    27 === a.which && b.options.escapeClose && b.close()
                }), this.options.clickClose && this.$blocker.click(function(b) {
                    b.target === this && a.modal.close()
                })
            },
            close: function() {
                d.pop(), this.unblock(), this.hide(), a.modal.isActive() || a(c).off("keydown.modal")
            },
            block: function() {
                this.$elm.trigger(a.modal.BEFORE_BLOCK, [this._ctx()]), this.$body.css("overflow", "hidden"), this.$blocker = a("<div class=\"" + this.options.blockerClass + " blocker current\"></div>").appendTo(this.$body), e(), this.options.doFade && this.$blocker.css("opacity", 0).animate({
                    opacity: 1
                }, this.options.fadeDuration), this.$elm.trigger(a.modal.BLOCK, [this._ctx()])
            },
            unblock: function(b) {
                !b && this.options.doFade ? this.$blocker.fadeOut(this.options.fadeDuration, this.unblock.bind(this, !0)) : (this.$blocker.children().appendTo(this.$body), this.$blocker.remove(), this.$blocker = null, e(), a.modal.isActive() || this.$body.css("overflow", ""))
            },
            show: function() {
                this.$elm.trigger(a.modal.BEFORE_OPEN, [this._ctx()]), this.options.showClose && (this.closeButton = a("<a href=\"#close-modal\" rel=\"modal:close\" class=\"close-modal " + this.options.closeClass + "\">" + this.options.closeText + "</a>"), this.$elm.append(this.closeButton)), this.$elm.addClass(this.options.modalClass).appendTo(this.$blocker), this.options.doFade ? this.$elm.css({
                    opacity: 0,
                    display: "inline-block"
                }).animate({
                    opacity: 1
                }, this.options.fadeDuration) : this.$elm.css("display", "inline-block"), this.$elm.trigger(a.modal.OPEN, [this._ctx()])
            },
            hide: function() {
                this.$elm.trigger(a.modal.BEFORE_CLOSE, [this._ctx()]), this.closeButton && this.closeButton.remove();
                var b = this;
                this.options.doFade ? this.$elm.fadeOut(this.options.fadeDuration, function() {
                    b.$elm.trigger(a.modal.AFTER_CLOSE, [b._ctx()])
                }) : this.$elm.hide(0, function() {
                    b.$elm.trigger(a.modal.AFTER_CLOSE, [b._ctx()])
                }), this.$elm.trigger(a.modal.CLOSE, [this._ctx()])
            },
            showSpinner: function() {
                this.options.showSpinner && (this.spinner = this.spinner || a("<div class=\"" + this.options.modalClass + "-spinner\"></div>").append(this.options.spinnerHtml), this.$body.append(this.spinner), this.spinner.show())
            },
            hideSpinner: function() {
                this.spinner && this.spinner.remove()
            },
            _ctx: function() {
                return {
                    elm: this.$elm,
                    $elm: this.$elm,
                    $blocker: this.$blocker,
                    options: this.options
                }
            }
        }, a.modal.close = function(b) {
            if (a.modal.isActive()) {
                b && b.preventDefault();
                var c = f();
                return c.close(), c.$elm
            }
        }, a.modal.isActive = function() {
            return 0 < d.length
        }, a.modal.getCurrent = f, a.modal.defaults = {
            closeExisting: !0,
            escapeClose: !0,
            clickClose: !0,
            closeText: "Close",
            closeClass: "",
            modalClass: "modal",
            blockerClass: "jquery-modal",
            spinnerHtml: "<div class=\"rect1\"></div><div class=\"rect2\"></div><div class=\"rect3\"></div><div class=\"rect4\"></div>",
            showSpinner: !0,
            showClose: !0,
            fadeDuration: null,
            fadeDelay: 1
        }, a.modal.BEFORE_BLOCK = "modal:before-block", a.modal.BLOCK = "modal:block", a.modal.BEFORE_OPEN = "modal:before-open", a.modal.OPEN = "modal:open", a.modal.BEFORE_CLOSE = "modal:before-close", a.modal.CLOSE = "modal:close", a.modal.AFTER_CLOSE = "modal:after-close", a.modal.AJAX_SEND = "modal:ajax:send", a.modal.AJAX_SUCCESS = "modal:ajax:success", a.modal.AJAX_FAIL = "modal:ajax:fail", a.modal.AJAX_COMPLETE = "modal:ajax:complete", a.fn.modal = function(b) {
            return 1 === this.length && new a.modal(this, b), this
        }, a(c).on("click.modal", "a[rel~=\"modal:close\"]", a.modal.close), a(c).on("click.modal", "a[rel~=\"modal:open\"]", function(b) {
            b.preventDefault(), a(this).modal()
        })
    });